diff --git a/node_modules/react-native-mmkv-storage/ios/MMKVNative.mm b/node_modules/react-native-mmkv-storage/ios/MMKVNative.mm
index 9af089d..f64a04a 100644
--- a/node_modules/react-native-mmkv-storage/ios/MMKVNative.mm
+++ b/node_modules/react-native-mmkv-storage/ios/MMKVNative.mm
@@ -30,13 +30,23 @@ - (instancetype)init
 {
     self = [super init];
     RCTExecuteOnMainQueue(^{
-        NSArray *paths = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory,
-                                                             NSUserDomainMask, YES);
-        NSString *libraryPath = (NSString *)[paths firstObject];
-        NSString *rootDir = [libraryPath stringByAppendingPathComponent:@"mmkv"];
+//        NSArray *paths = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory,
+//                                                             NSUserDomainMask, YES);
+//        NSString *libraryPath = (NSString *)[paths firstObject];
+        
+        NSString *myGroupID = @"group.org.streetwriters.notesnook"; // the group dir that can be accessed by App & extensions
+
+        NSString *groupDir = [[NSFileManager defaultManager] containerURLForSecurityApplicationGroupIdentifier:myGroupID].path;
+        NSString *rootDir = [groupDir stringByAppendingPathComponent:@"mmkv"];
+              
+        // Do not include this directory in cloud backups.
+        NSError *error = nil;
+        NSURL *url = [NSURL fileURLWithPath:rootDir isDirectory:YES];
+        [url setResourceValue:[NSNumber numberWithBool:YES] forKey:NSURLIsExcludedFromBackupKey error:&error];
         rPath = rootDir;
+        // Set the groupDir
         _secureStorage = [[SecureStorage alloc] init];
-        [MMKV initializeMMKV:rootDir];
+        [MMKV initializeMMKV:nil groupDir:rootDir logLevel:MMKVLogInfo];
     });
     
     
@@ -706,7 +716,7 @@ static void install(jsi::Runtime &jsiRuntime) {
 }
 
 - (void)migrate {
-    MMKV *kv = [MMKV mmkvWithID:@"mmkvIdStore"];
+    MMKV *kv = [MMKV mmkvWithID:@"mmkvIdStore" mode:MMKVMultiProcess];
     [mmkvInstances setObject:kv forKey:@"mmkvIdStore"];
     if ([kv containsKey:@"mmkvIdData"]) {
         NSMutableDictionary *oldStore =
