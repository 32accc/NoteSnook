diff --git a/node_modules/react-native/ReactCommon/jsc/JSCRuntime.cpp b/node_modules/react-native/ReactCommon/jsc/JSCRuntime.cpp
index 7958519..25f58b1 100644
--- a/node_modules/react-native/ReactCommon/jsc/JSCRuntime.cpp
+++ b/node_modules/react-native/ReactCommon/jsc/JSCRuntime.cpp
@@ -409,12 +409,12 @@ JSCRuntime::~JSCRuntime() {
   // has started.
   ctxInvalid_ = true;
   JSGlobalContextRelease(ctx_);
-#ifndef NDEBUG
-  assert(
-      objectCounter_ == 0 && "JSCRuntime destroyed with a dangling API object");
-  assert(
-      stringCounter_ == 0 && "JSCRuntime destroyed with a dangling API string");
-#endif
+//#ifndef NDEBUG
+//  assert(
+//      objectCounter_ == 0 && "JSCRuntime destroyed with a dangling API object");
+//  assert(
+//      stringCounter_ == 0 && "JSCRuntime destroyed with a dangling API string");
+//#endif
 }
 
 std::shared_ptr<const jsi::PreparedJavaScript> JSCRuntime::prepareJavaScript(
diff --git a/node_modules/react-native/scripts/.packager.env b/node_modules/react-native/scripts/.packager.env
new file mode 100644
index 0000000..361f5fb
--- /dev/null
+++ b/node_modules/react-native/scripts/.packager.env
@@ -0,0 +1 @@
+export RCT_METRO_PORT=8081
diff --git a/node_modules/react-native/scripts/launchPackager.command b/node_modules/react-native/scripts/launchPackager.command
index efd1f2e..c2fbbb3 100755
--- a/node_modules/react-native/scripts/launchPackager.command
+++ b/node_modules/react-native/scripts/launchPackager.command
@@ -10,7 +10,7 @@ clear
 
 THIS_DIR=$(cd -P "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo "${BASH_SOURCE[0]}")")" && pwd)
 
-export PODS_ROOT="$THIS_DIR/../../../ios/Pods"
+export PODS_ROOT="$THIS_DIR/../../../native/ios/Pods"
 WITH_ENVIRONMENT="$THIS_DIR/xcode/with-environment.sh"
 source $WITH_ENVIRONMENT
 
diff --git a/node_modules/react-native/scripts/packager.sh b/node_modules/react-native/scripts/packager.sh
index cb8b101..519070a 100755
--- a/node_modules/react-native/scripts/packager.sh
+++ b/node_modules/react-native/scripts/packager.sh
@@ -8,17 +8,16 @@
 THIS_DIR=$(cd -P "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo "${BASH_SOURCE[0]}")")" && pwd)
 REACT_NATIVE_ROOT="$THIS_DIR/.."
 # Application root directory - General use case: react-native is a dependency
-PROJECT_ROOT=${PROJECT_ROOT:-"$THIS_DIR/../../.."}
-
+PROJECT_ROOT=${PROJECT_ROOT:-"$THIS_DIR/../../../native"}
 # check and assign NODE_BINARY env
 # shellcheck disable=SC1090
 source "${THIS_DIR}/node-binary.sh"
 
 # When running react-native tests, react-native doesn't live in node_modules but in the PROJECT_ROOT
-if [ ! -d "$THIS_DIR/../../../node_modules/react-native" ];
-then
-  PROJECT_ROOT="$THIS_DIR/../../.."
-fi
+# if [ ! -d "$THIS_DIR/../../../node_modules/react-native" ];
+# then
+#   PROJECT_ROOT="$THIS_DIR/../../.."
+# fi
 # Start packager from PROJECT_ROOT
 cd "$PROJECT_ROOT" || exit
 "$NODE_BINARY" "$REACT_NATIVE_ROOT/cli.js" start --custom-log-reporter-path "$THIS_DIR/packager-reporter.js" "$@"
